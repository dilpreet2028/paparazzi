apply plugin: 'com.github.ben-manes.versions'

buildscript {
  ext.versions = [
    kotlin: '1.4.10',
    agp: '3.6.1',
    layoutlib: '4.0.0-alpha02-b169460', // "should" be similar to versions.agp
    androidTools: '26.6.0', // agp + 23.0.0 = androidTools
    jcodec: '0.2.5',
    moshi: '1.10.0',
    bytebuddy: '1.10.14',
    releasedPaparazzi: '0.6.0'
  ]

  ext.deps = [
    plugins: [
      android: "com.android.tools.build:gradle:${versions.agp}",
      kotlin: "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}",
    ],
    kotlin: [
      stdlib: [
        jdk8: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
      ]
    ],
    kotlinx: [
      coroutines: [
        core: 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9',
      ],
    ],
    tools: [
      common: "com.android.tools:common:${versions.androidTools}",
      layoutlib: "com.android.tools.layoutlib:layoutlib-api:${versions.androidTools}",
      sdkcommon: "com.android.tools:sdk-common:${versions.androidTools}",
    ],
    kxml2: 'kxml2:kxml2:2.3.0',
    androidx: [
      annotations: 'androidx.annotation:annotation:1.1.0'
    ],
    layoutlib: "app.cash.paparazzi:layoutlib-jdk11:${versions.layoutlib}",
    okio: 'com.squareup.okio:okio:2.8.0',
    moshi: [
      core: "com.squareup.moshi:moshi:${versions.moshi}",
      adapters: "com.squareup.moshi:moshi-adapters:${versions.moshi}",
      kotlinCodegen: "com.squareup.moshi:moshi-kotlin-codegen:${versions.moshi}",
    ],
    jcodec: [
      core: "org.jcodec:jcodec:${versions.jcodec}",
      javase: "org.jcodec:jcodec-javase:${versions.jcodec}"
    ],
    bytebuddy: [
      core: "net.bytebuddy:byte-buddy:${versions.bytebuddy}",
      agent: "net.bytebuddy:byte-buddy-agent:${versions.bytebuddy}",
    ],
    guava: 'com.google.guava:guava:29.0-jre',
    junit: 'junit:junit:4.13',
    truth: 'com.google.truth:truth:1.0.1',
    assertj: 'org.assertj:assertj-core:3.17.2'
  ]

  repositories {
    maven {
      url project.findProperty("PAPARAZZI_MAVEN_REPOSITORY_URL")
      content {
        includeGroup 'app.cash.paparazzi'
      }
    }
    mavenCentral()
    google()
    jcenter()
    //mavenLocal()
  }

  dependencies {
    classpath deps.plugins.kotlin
    classpath deps.plugins.android
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.33.0'
    classpath 'org.jetbrains.dokka:dokka-gradle-plugin:0.9.18'
    classpath "app.cash.paparazzi:paparazzi-gradle-plugin:${versions.releasedPaparazzi}"
  }
}

subprojects {
  repositories {
    maven {
      url project.findProperty("PAPARAZZI_MAVEN_REPOSITORY_URL")
      content {
        includeGroup 'app.cash.paparazzi'
      }
    }
    mavenCentral()
    google()
    jcenter()
    maven {
      url 'https://dl.bintray.com/kotlin/dokka'
    }
    //mavenLocal()
  }

  group = GROUP
  version = VERSION_NAME

  tasks.withType(Test) {
    testLogging {
      events "failed"
      exceptionFormat "full"
      showExceptions true
      showStackTraces true
      showCauses true
    }
  }

  tasks.withType(JavaCompile).configureEach { task ->
    task.sourceCompatibility = JavaVersion.VERSION_1_8
    task.targetCompatibility = JavaVersion.VERSION_1_8
  }

  tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinJvmCompile).configureEach { task ->
    task.kotlinOptions {
      jvmTarget = "1.8"
    }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

tasks.wrapper {
  distributionType = Wrapper.DistributionType.ALL
}
